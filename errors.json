{
  "0": "The object notation for `createReducer` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createReducer",
  "1": "A case reducer on a non-draftable value must not return undefined",
  "2": ": ",
  "3": "prepareAction did not return an object",
  "4": "\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers",
  "5": "when using a middleware builder function, an array of middleware must be returned",
  "6": "each middleware provided to configureStore must be a function",
  "7": "\"enhancers\" field must be a callback",
  "8": "\"enhancers\" callback must return an array",
  "9": "each enhancer provided to configureStore must be a function",
  "10": "`name` is a required option for createSlice",
  "11": "The object notation for `createSlice.extraReducers` has been removed. Please use the 'builder callback' notation instead: https://redux-toolkit.js.org/api/createSlice",
  "12": "selectState returned undefined for an uninjected slice reducer",
  "13": "Please use the `create.preparedReducer` notation for prepared action creators with the `create` notation.",
  "14": "The slice reducer for key \"\" returned undefined when called for selector(). If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.",
  "15": "original must be used on state Proxy",
  "16": "Creating or removing a listener requires one of the known fields for matching an action",
  "17": "Unsubscribe not initialized",
  "18": ": getOriginalState can only be called synchronously",
  "19": "`builder.addCase` should only be called before calling `builder.addMatcher`",
  "20": "`builder.addCase` should only be called before calling `builder.addDefaultCase`",
  "21": "addCase cannot be called with two reducers for the same action type",
  "22": "`builder.addMatcher` should only be called before calling `builder.addDefaultCase`",
  "23": "`builder.addDefaultCase` can only be called once",
  "24": " is not a function",
  "25": "When using `fakeBaseQuery`, all queries & mutations must use the `queryFn` definition syntax.",
  "26": "Warning: Middleware for RTK-Query API at reducerPath \"\" has not been added to the store.\nYou must add the middleware for RTK-Query to function correctly!",
  "27": "Warning: Middleware for RTK-Query API at reducerPath \"\" has not been added to the store.\n    You must add the middleware for RTK-Query to function correctly!",
  "28": "Cannot refetch a query that has not been started yet.",
  "29": "`builder.addCase` cannot be called with an empty action type",
  "30": "`builder.addCase` cannot be called with two reducers for the same action type",
  "31": "\"middleware\" field must be a callback",
  "32": "When using custom hooks for context, all  hooks need to be provided: .\\nHook  was either not provided or not a function.",
  "33": "Existing Redux context detected. If you already have a store set up, please use the traditional Redux setup.",
  "34": "selectSlice returned undefined for an uninjected slice reducer",
  "35": "Cannot use `create.asyncThunk` in the built-in `createSlice`. Use `buildCreateSlice({ creators: { asyncThunk: asyncThunkCreator } })` to create a customised version of `createSlice`.",
  "36": "`context.addCase` cannot be called with an empty action type",
  "37": "`context.addCase` cannot be called with two reducers for the same action type: type",
  "38": "No insert provided for key not already in map"
}